# GitLab CI/CD –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
stages:
  - test
  - build
  - deploy

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.pip-cache"

cache:
  paths:
    - .pip-cache/
    - venv/

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
test:
  stage: test
  image: python:3.10
  before_script:
    - python -V
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip install -r requirements.txt
  script:
    - source venv/bin/activate
    - python -m pytest tests/ || echo "–¢–µ—Å—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º"
    - python -c "import app; print('‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è —É—Å–ø–µ—à–Ω–æ')"
  only:
    - main
    - develop

# –°–±–æ—Ä–∫–∞
build:
  stage: build
  image: python:3.10
  before_script:
    - python -V
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip install -r requirements.txt
  script:
    - source venv/bin/activate
    - echo "üî® –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
    - echo "üì¶ –ì–æ—Ç–æ–≤ –∫ –¥–µ–ø–ª–æ—é"
  artifacts:
    paths:
      - venv/
      - requirements.txt
      - app.py
      - static/
      - templates/
    expire_in: 1 hour
  only:
    - main
    - develop

# –î–µ–ø–ª–æ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä
deploy:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä..."
    - ssh $SSH_USER@$SSH_HOST "
        cd $DEPLOY_PATH &&
        git pull origin main &&
        source venv/bin/activate &&
        pip install -r requirements.txt &&
        sudo systemctl restart flask-app &&
        echo '‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ'
      "
  environment:
    name: production
    url: http://$SSH_HOST:5000
  only:
    - main
  when: manual 